// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/packet.proto

#ifndef PROTOBUF_INCLUDED_proto_2fpacket_2eproto
#define PROTOBUF_INCLUDED_proto_2fpacket_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fpacket_2eproto 

namespace protobuf_proto_2fpacket_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_2fpacket_2eproto
namespace ProtoMessage {
class Packet;
class PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class PacketHeader;
class PacketHeaderDefaultTypeInternal;
extern PacketHeaderDefaultTypeInternal _PacketHeader_default_instance_;
class PacketHeader_IdStringEntry;
class PacketHeader_IdStringEntryDefaultTypeInternal;
extern PacketHeader_IdStringEntryDefaultTypeInternal _PacketHeader_IdStringEntry_default_instance_;
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
template<> ::ProtoMessage::Packet* Arena::CreateMaybeMessage<::ProtoMessage::Packet>(Arena*);
template<> ::ProtoMessage::PacketHeader* Arena::CreateMaybeMessage<::ProtoMessage::PacketHeader>(Arena*);
template<> ::ProtoMessage::PacketHeader_IdStringEntry* Arena::CreateMaybeMessage<::ProtoMessage::PacketHeader_IdStringEntry>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoMessage {

// ===================================================================

class PacketHeader_IdStringEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMessage.PacketHeader.IdStringEntry) */ {
 public:
  PacketHeader_IdStringEntry();
  virtual ~PacketHeader_IdStringEntry();

  PacketHeader_IdStringEntry(const PacketHeader_IdStringEntry& from);

  inline PacketHeader_IdStringEntry& operator=(const PacketHeader_IdStringEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PacketHeader_IdStringEntry(PacketHeader_IdStringEntry&& from) noexcept
    : PacketHeader_IdStringEntry() {
    *this = ::std::move(from);
  }

  inline PacketHeader_IdStringEntry& operator=(PacketHeader_IdStringEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketHeader_IdStringEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PacketHeader_IdStringEntry* internal_default_instance() {
    return reinterpret_cast<const PacketHeader_IdStringEntry*>(
               &_PacketHeader_IdStringEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PacketHeader_IdStringEntry* other);
  friend void swap(PacketHeader_IdStringEntry& a, PacketHeader_IdStringEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PacketHeader_IdStringEntry* New() const final {
    return CreateMaybeMessage<PacketHeader_IdStringEntry>(NULL);
  }

  PacketHeader_IdStringEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PacketHeader_IdStringEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PacketHeader_IdStringEntry& from);
  void MergeFrom(const PacketHeader_IdStringEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PacketHeader_IdStringEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint32 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.PacketHeader.IdStringEntry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 key_;
  friend struct ::protobuf_proto_2fpacket_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMessage.PacketHeader) */ {
 public:
  PacketHeader();
  virtual ~PacketHeader();

  PacketHeader(const PacketHeader& from);

  inline PacketHeader& operator=(const PacketHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PacketHeader(PacketHeader&& from) noexcept
    : PacketHeader() {
    *this = ::std::move(from);
  }

  inline PacketHeader& operator=(PacketHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PacketHeader* internal_default_instance() {
    return reinterpret_cast<const PacketHeader*>(
               &_PacketHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PacketHeader* other);
  friend void swap(PacketHeader& a, PacketHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PacketHeader* New() const final {
    return CreateMaybeMessage<PacketHeader>(NULL);
  }

  PacketHeader* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PacketHeader>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PacketHeader& from);
  void MergeFrom(const PacketHeader& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PacketHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PacketHeader_IdStringEntry IdStringEntry;

  // accessors -------------------------------------------------------

  // repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
  int id_strings_size() const;
  void clear_id_strings();
  static const int kIdStringsFieldNumber = 4;
  ::ProtoMessage::PacketHeader_IdStringEntry* mutable_id_strings(int index);
  ::google::protobuf::RepeatedPtrField< ::ProtoMessage::PacketHeader_IdStringEntry >*
      mutable_id_strings();
  const ::ProtoMessage::PacketHeader_IdStringEntry& id_strings(int index) const;
  ::ProtoMessage::PacketHeader_IdStringEntry* add_id_strings();
  const ::google::protobuf::RepeatedPtrField< ::ProtoMessage::PacketHeader_IdStringEntry >&
      id_strings() const;

  // required string obj_id = 1;
  bool has_obj_id() const;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 1;
  const ::std::string& obj_id() const;
  void set_obj_id(const ::std::string& value);
  #if LANG_CXX11
  void set_obj_id(::std::string&& value);
  #endif
  void set_obj_id(const char* value);
  void set_obj_id(const char* value, size_t size);
  ::std::string* mutable_obj_id();
  ::std::string* release_obj_id();
  void set_allocated_obj_id(::std::string* obj_id);

  // required uint64 tick_freq = 3;
  bool has_tick_freq() const;
  void clear_tick_freq();
  static const int kTickFreqFieldNumber = 3;
  ::google::protobuf::uint64 tick_freq() const;
  void set_tick_freq(::google::protobuf::uint64 value);

  // optional uint32 ver = 2 [default = 0];
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 2;
  ::google::protobuf::uint32 ver() const;
  void set_ver(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.PacketHeader)
 private:
  void set_has_obj_id();
  void clear_has_obj_id();
  void set_has_ver();
  void clear_has_ver();
  void set_has_tick_freq();
  void clear_has_tick_freq();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoMessage::PacketHeader_IdStringEntry > id_strings_;
  ::google::protobuf::internal::ArenaStringPtr obj_id_;
  ::google::protobuf::uint64 tick_freq_;
  ::google::protobuf::uint32 ver_;
  friend struct ::protobuf_proto_2fpacket_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Packet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMessage.Packet) */ {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Packet(Packet&& from) noexcept
    : Packet() {
    *this = ::std::move(from);
  }

  inline Packet& operator=(Packet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
               &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Packet* other);
  friend void swap(Packet& a, Packet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Packet* New() const final {
    return CreateMaybeMessage<Packet>(NULL);
  }

  Packet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Packet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Packet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tick = 1;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 1;
  ::google::protobuf::uint64 tick() const;
  void set_tick(::google::protobuf::uint64 value);

  // required uint64 addr = 3;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  ::google::protobuf::uint64 addr() const;
  void set_addr(::google::protobuf::uint64 value);

  // required uint32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // required uint32 size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::uint32 size() const;
  void set_size(::google::protobuf::uint32 value);

  // optional uint64 pkt_id = 6;
  bool has_pkt_id() const;
  void clear_pkt_id();
  static const int kPktIdFieldNumber = 6;
  ::google::protobuf::uint64 pkt_id() const;
  void set_pkt_id(::google::protobuf::uint64 value);

  // optional uint64 pc = 7;
  bool has_pc() const;
  void clear_pc();
  static const int kPcFieldNumber = 7;
  ::google::protobuf::uint64 pc() const;
  void set_pc(::google::protobuf::uint64 value);

  // optional uint32 flags = 5;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 5;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMessage.Packet)
 private:
  void set_has_tick();
  void clear_has_tick();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_addr();
  void clear_has_addr();
  void set_has_size();
  void clear_has_size();
  void set_has_flags();
  void clear_has_flags();
  void set_has_pkt_id();
  void clear_has_pkt_id();
  void set_has_pc();
  void clear_has_pc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 tick_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint64 pkt_id_;
  ::google::protobuf::uint64 pc_;
  ::google::protobuf::uint32 flags_;
  friend struct ::protobuf_proto_2fpacket_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PacketHeader_IdStringEntry

// optional uint32 key = 1;
inline bool PacketHeader_IdStringEntry::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketHeader_IdStringEntry::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketHeader_IdStringEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketHeader_IdStringEntry::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 PacketHeader_IdStringEntry::key() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.IdStringEntry.key)
  return key_;
}
inline void PacketHeader_IdStringEntry::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.PacketHeader.IdStringEntry.key)
}

// optional string value = 2;
inline bool PacketHeader_IdStringEntry::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketHeader_IdStringEntry::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketHeader_IdStringEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketHeader_IdStringEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& PacketHeader_IdStringEntry::value() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.IdStringEntry.value)
  return value_.GetNoArena();
}
inline void PacketHeader_IdStringEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMessage.PacketHeader.IdStringEntry.value)
}
#if LANG_CXX11
inline void PacketHeader_IdStringEntry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessage.PacketHeader.IdStringEntry.value)
}
#endif
inline void PacketHeader_IdStringEntry::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMessage.PacketHeader.IdStringEntry.value)
}
inline void PacketHeader_IdStringEntry::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.PacketHeader.IdStringEntry.value)
}
inline ::std::string* PacketHeader_IdStringEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:ProtoMessage.PacketHeader.IdStringEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHeader_IdStringEntry::release_value() {
  // @@protoc_insertion_point(field_release:ProtoMessage.PacketHeader.IdStringEntry.value)
  if (!has_value()) {
    return NULL;
  }
  clear_has_value();
  return value_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHeader_IdStringEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.PacketHeader.IdStringEntry.value)
}

// -------------------------------------------------------------------

// PacketHeader

// required string obj_id = 1;
inline bool PacketHeader::has_obj_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketHeader::set_has_obj_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketHeader::clear_has_obj_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketHeader::clear_obj_id() {
  obj_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obj_id();
}
inline const ::std::string& PacketHeader::obj_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.obj_id)
  return obj_id_.GetNoArena();
}
inline void PacketHeader::set_obj_id(const ::std::string& value) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMessage.PacketHeader.obj_id)
}
#if LANG_CXX11
inline void PacketHeader::set_obj_id(::std::string&& value) {
  set_has_obj_id();
  obj_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessage.PacketHeader.obj_id)
}
#endif
inline void PacketHeader::set_obj_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMessage.PacketHeader.obj_id)
}
inline void PacketHeader::set_obj_id(const char* value, size_t size) {
  set_has_obj_id();
  obj_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.PacketHeader.obj_id)
}
inline ::std::string* PacketHeader::mutable_obj_id() {
  set_has_obj_id();
  // @@protoc_insertion_point(field_mutable:ProtoMessage.PacketHeader.obj_id)
  return obj_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketHeader::release_obj_id() {
  // @@protoc_insertion_point(field_release:ProtoMessage.PacketHeader.obj_id)
  if (!has_obj_id()) {
    return NULL;
  }
  clear_has_obj_id();
  return obj_id_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketHeader::set_allocated_obj_id(::std::string* obj_id) {
  if (obj_id != NULL) {
    set_has_obj_id();
  } else {
    clear_has_obj_id();
  }
  obj_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obj_id);
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.PacketHeader.obj_id)
}

// optional uint32 ver = 2 [default = 0];
inline bool PacketHeader::has_ver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketHeader::set_has_ver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketHeader::clear_has_ver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketHeader::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 PacketHeader::ver() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.ver)
  return ver_;
}
inline void PacketHeader::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.PacketHeader.ver)
}

// required uint64 tick_freq = 3;
inline bool PacketHeader::has_tick_freq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketHeader::set_has_tick_freq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketHeader::clear_has_tick_freq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketHeader::clear_tick_freq() {
  tick_freq_ = GOOGLE_ULONGLONG(0);
  clear_has_tick_freq();
}
inline ::google::protobuf::uint64 PacketHeader::tick_freq() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.tick_freq)
  return tick_freq_;
}
inline void PacketHeader::set_tick_freq(::google::protobuf::uint64 value) {
  set_has_tick_freq();
  tick_freq_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.PacketHeader.tick_freq)
}

// repeated .ProtoMessage.PacketHeader.IdStringEntry id_strings = 4;
inline int PacketHeader::id_strings_size() const {
  return id_strings_.size();
}
inline void PacketHeader::clear_id_strings() {
  id_strings_.Clear();
}
inline ::ProtoMessage::PacketHeader_IdStringEntry* PacketHeader::mutable_id_strings(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessage.PacketHeader.id_strings)
  return id_strings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoMessage::PacketHeader_IdStringEntry >*
PacketHeader::mutable_id_strings() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessage.PacketHeader.id_strings)
  return &id_strings_;
}
inline const ::ProtoMessage::PacketHeader_IdStringEntry& PacketHeader::id_strings(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessage.PacketHeader.id_strings)
  return id_strings_.Get(index);
}
inline ::ProtoMessage::PacketHeader_IdStringEntry* PacketHeader::add_id_strings() {
  // @@protoc_insertion_point(field_add:ProtoMessage.PacketHeader.id_strings)
  return id_strings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoMessage::PacketHeader_IdStringEntry >&
PacketHeader::id_strings() const {
  // @@protoc_insertion_point(field_list:ProtoMessage.PacketHeader.id_strings)
  return id_strings_;
}

// -------------------------------------------------------------------

// Packet

// required uint64 tick = 1;
inline bool Packet::has_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Packet::set_has_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Packet::clear_has_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Packet::clear_tick() {
  tick_ = GOOGLE_ULONGLONG(0);
  clear_has_tick();
}
inline ::google::protobuf::uint64 Packet::tick() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.tick)
  return tick_;
}
inline void Packet::set_tick(::google::protobuf::uint64 value) {
  set_has_tick();
  tick_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.tick)
}

// required uint32 cmd = 2;
inline bool Packet::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Packet::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Packet::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Packet::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 Packet::cmd() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.cmd)
  return cmd_;
}
inline void Packet::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.cmd)
}

// required uint64 addr = 3;
inline bool Packet::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Packet::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Packet::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Packet::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 Packet::addr() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.addr)
  return addr_;
}
inline void Packet::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.addr)
}

// required uint32 size = 4;
inline bool Packet::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Packet::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Packet::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Packet::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 Packet::size() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.size)
  return size_;
}
inline void Packet::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.size)
}

// optional uint32 flags = 5;
inline bool Packet::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Packet::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Packet::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Packet::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 Packet::flags() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.flags)
  return flags_;
}
inline void Packet::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.flags)
}

// optional uint64 pkt_id = 6;
inline bool Packet::has_pkt_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Packet::set_has_pkt_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Packet::clear_has_pkt_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Packet::clear_pkt_id() {
  pkt_id_ = GOOGLE_ULONGLONG(0);
  clear_has_pkt_id();
}
inline ::google::protobuf::uint64 Packet::pkt_id() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.pkt_id)
  return pkt_id_;
}
inline void Packet::set_pkt_id(::google::protobuf::uint64 value) {
  set_has_pkt_id();
  pkt_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.pkt_id)
}

// optional uint64 pc = 7;
inline bool Packet::has_pc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Packet::set_has_pc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Packet::clear_has_pc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Packet::clear_pc() {
  pc_ = GOOGLE_ULONGLONG(0);
  clear_has_pc();
}
inline ::google::protobuf::uint64 Packet::pc() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.Packet.pc)
  return pc_;
}
inline void Packet::set_pc(::google::protobuf::uint64 value) {
  set_has_pc();
  pc_ = value;
  // @@protoc_insertion_point(field_set:ProtoMessage.Packet.pc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_2fpacket_2eproto
