diff --git a/am/src/nemu/isa/riscv/boot/loader64.ld b/am/src/nemu/isa/riscv/boot/loader64.ld
index 05cf7af7..020181e8 100644
--- a/am/src/nemu/isa/riscv/boot/loader64.ld
+++ b/am/src/nemu/isa/riscv/boot/loader64.ld
@@ -1,7 +1,7 @@
-pmem_base = 0x80000000;
+pmem_base = 0x80100000;
 
 MEMORY {
-  ram (rwxa) : ORIGIN = 0x80000000, LENGTH = 1024M
+  ram (rwxa) : ORIGIN = 0x80100000, LENGTH = 1024M
 }
 
 INCLUDE "section.ld"
diff --git a/apps/mem_test/mem_test_latency/mem_test_latency.c b/apps/mem_test/mem_test_latency/mem_test_latency.c
index b9486e5c..04477726 100644
--- a/apps/mem_test/mem_test_latency/mem_test_latency.c
+++ b/apps/mem_test/mem_test_latency/mem_test_latency.c
@@ -4,7 +4,18 @@
 #define xstr(s) str(s)
 #define str(s)  #s
 
-int main(){
+#define DISABLE_TIME_INTR 0x100
+#define NOTIFY_PROFILER 0x101
+
+void nemu_signal(int a){
+    asm volatile ("mv a0, %0\n\t"
+                  ".insn r 0x6B, 0, 0, x0, x0, x0\n\t"
+                  :
+                  : "r"(a)
+                  : "a0");
+}
+
+int main() {
     unsigned long long busy_cycles;
     unsigned long long busy_instrs;
     //control
@@ -13,9 +24,14 @@ int main(){
     uint64_t start_addr = _PERF_TEST_ADDR_BASE;
     //init end address, step = 256k,input step size
     //_PERF_L1_SIZE_BYTE (64 * KB) _TEST_NUM_SIZE (32 * KB) _STEP_SIZE (256 *KB)
+
     uint64_t end_addr = (_PERF_TEST_ADDR_BASE + _PERF_L2_SIZE_BYTE + cache_warmup_size_count *_STEP_SIZE);
     //make cache warmup  put the test address in l1/l2/l3 _PERF_CACHELINE_SIZE_BYTE (8 * BYTE)
     full_cache_warmup_i(start_addr,end_addr,_PERF_CACHELINE_SIZE_BYTE,cache_warmup_size_count);
+
+    nemu_signal(DISABLE_TIME_INTR);
+    nemu_signal(NOTIFY_PROFILER);
+
     //cache latency test
     cache_iloop(&busy_instrs,&busy_cycles);
 
