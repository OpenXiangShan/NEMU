// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/inst_dep_record.proto

#include "inst_trace/inst_dep_record.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ProtoMessage {
class InstDepRecordHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstDepRecordHeader>
      _instance;
} _InstDepRecordHeader_default_instance_;
class InstDepRecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InstDepRecord>
      _instance;
} _InstDepRecord_default_instance_;
}  // namespace ProtoMessage
namespace protobuf_proto_2finst_5fdep_5frecord_2eproto {
static void InitDefaultsInstDepRecordHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessage::_InstDepRecordHeader_default_instance_;
    new (ptr) ::ProtoMessage::InstDepRecordHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMessage::InstDepRecordHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstDepRecordHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstDepRecordHeader}, {}};

static void InitDefaultsInstDepRecord() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessage::_InstDepRecord_default_instance_;
    new (ptr) ::ProtoMessage::InstDepRecord();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMessage::InstDepRecord::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InstDepRecord =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInstDepRecord}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InstDepRecordHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InstDepRecord.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, obj_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, tick_freq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecordHeader, window_size_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, seq_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, p_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, rob_dep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, comp_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, reg_dep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, v_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMessage::InstDepRecord, asid_),
  0,
  2,
  1,
  3,
  5,
  ~0u,
  4,
  ~0u,
  6,
  7,
  8,
  9,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::ProtoMessage::InstDepRecordHeader)},
  { 13, 30, sizeof(::ProtoMessage::InstDepRecord)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMessage::_InstDepRecordHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMessage::_InstDepRecord_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/inst_dep_record.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033proto/inst_dep_record.proto\022\014ProtoMess"
      "age\"]\n\023InstDepRecordHeader\022\016\n\006obj_id\030\001 \002"
      "(\t\022\016\n\003ver\030\002 \001(\r:\0010\022\021\n\ttick_freq\030\003 \002(\004\022\023\n"
      "\013window_size\030\004 \002(\r\"\266\002\n\rInstDepRecord\022\017\n\007"
      "seq_num\030\001 \002(\004\022=\n\004type\030\002 \002(\0162&.ProtoMessa"
      "ge.InstDepRecord.RecordType:\007INVALID\022\016\n\006"
      "p_addr\030\003 \001(\004\022\014\n\004size\030\004 \001(\r\022\r\n\005flags\030\005 \001("
      "\r\022\017\n\007rob_dep\030\006 \003(\004\022\022\n\ncomp_delay\030\007 \002(\004\022\017"
      "\n\007reg_dep\030\010 \003(\004\022\016\n\006weight\030\t \001(\r\022\n\n\002pc\030\n "
      "\001(\004\022\016\n\006v_addr\030\013 \001(\004\022\014\n\004asid\030\014 \001(\r\"8\n\nRec"
      "ordType\022\013\n\007INVALID\020\000\022\010\n\004LOAD\020\001\022\t\n\005STORE\020"
      "\002\022\010\n\004COMP\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 451);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/inst_dep_record.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2finst_5fdep_5frecord_2eproto
namespace ProtoMessage {
const ::google::protobuf::EnumDescriptor* InstDepRecord_RecordType_descriptor() {
  protobuf_proto_2finst_5fdep_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2finst_5fdep_5frecord_2eproto::file_level_enum_descriptors[0];
}
bool InstDepRecord_RecordType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InstDepRecord_RecordType InstDepRecord::INVALID;
const InstDepRecord_RecordType InstDepRecord::LOAD;
const InstDepRecord_RecordType InstDepRecord::STORE;
const InstDepRecord_RecordType InstDepRecord::COMP;
const InstDepRecord_RecordType InstDepRecord::RecordType_MIN;
const InstDepRecord_RecordType InstDepRecord::RecordType_MAX;
const int InstDepRecord::RecordType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void InstDepRecordHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstDepRecordHeader::kObjIdFieldNumber;
const int InstDepRecordHeader::kVerFieldNumber;
const int InstDepRecordHeader::kTickFreqFieldNumber;
const int InstDepRecordHeader::kWindowSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstDepRecordHeader::InstDepRecordHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2finst_5fdep_5frecord_2eproto::scc_info_InstDepRecordHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessage.InstDepRecordHeader)
}
InstDepRecordHeader::InstDepRecordHeader(const InstDepRecordHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_obj_id()) {
    obj_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_id_);
  }
  ::memcpy(&tick_freq_, &from.tick_freq_,
    static_cast<size_t>(reinterpret_cast<char*>(&window_size_) -
    reinterpret_cast<char*>(&tick_freq_)) + sizeof(window_size_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecordHeader)
}

void InstDepRecordHeader::SharedCtor() {
  obj_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tick_freq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&window_size_) -
      reinterpret_cast<char*>(&tick_freq_)) + sizeof(window_size_));
}

InstDepRecordHeader::~InstDepRecordHeader() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecordHeader)
  SharedDtor();
}

void InstDepRecordHeader::SharedDtor() {
  obj_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstDepRecordHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstDepRecordHeader::descriptor() {
  ::protobuf_proto_2finst_5fdep_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2finst_5fdep_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstDepRecordHeader& InstDepRecordHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2finst_5fdep_5frecord_2eproto::scc_info_InstDepRecordHeader.base);
  return *internal_default_instance();
}


void InstDepRecordHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecordHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    obj_id_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&tick_freq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&window_size_) -
        reinterpret_cast<char*>(&tick_freq_)) + sizeof(window_size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InstDepRecordHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessage.InstDepRecordHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string obj_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_obj_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->obj_id().data(), static_cast<int>(this->obj_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ProtoMessage.InstDepRecordHeader.obj_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ver = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ver();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 tick_freq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_tick_freq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tick_freq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 window_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_window_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &window_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessage.InstDepRecordHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessage.InstDepRecordHeader)
  return false;
#undef DO_
}

void InstDepRecordHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessage.InstDepRecordHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string obj_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj_id().data(), static_cast<int>(this->obj_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtoMessage.InstDepRecordHeader.obj_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->obj_id(), output);
  }

  // optional uint32 ver = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ver(), output);
  }

  // required uint64 tick_freq = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tick_freq(), output);
  }

  // required uint32 window_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->window_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessage.InstDepRecordHeader)
}

::google::protobuf::uint8* InstDepRecordHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecordHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string obj_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->obj_id().data(), static_cast<int>(this->obj_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ProtoMessage.InstDepRecordHeader.obj_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->obj_id(), target);
  }

  // optional uint32 ver = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ver(), target);
  }

  // required uint64 tick_freq = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tick_freq(), target);
  }

  // required uint32 window_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->window_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecordHeader)
  return target;
}

size_t InstDepRecordHeader::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoMessage.InstDepRecordHeader)
  size_t total_size = 0;

  if (has_obj_id()) {
    // required string obj_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_id());
  }

  if (has_tick_freq()) {
    // required uint64 tick_freq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tick_freq());
  }

  if (has_window_size()) {
    // required uint32 window_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->window_size());
  }

  return total_size;
}
size_t InstDepRecordHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecordHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required string obj_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->obj_id());

    // required uint64 tick_freq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tick_freq());

    // required uint32 window_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->window_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 ver = 2 [default = 0];
  if (has_ver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstDepRecordHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessage.InstDepRecordHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const InstDepRecordHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstDepRecordHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessage.InstDepRecordHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessage.InstDepRecordHeader)
    MergeFrom(*source);
  }
}

void InstDepRecordHeader::MergeFrom(const InstDepRecordHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecordHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_obj_id();
      obj_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.obj_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      tick_freq_ = from.tick_freq_;
    }
    if (cached_has_bits & 0x00000004u) {
      ver_ = from.ver_;
    }
    if (cached_has_bits & 0x00000008u) {
      window_size_ = from.window_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InstDepRecordHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessage.InstDepRecordHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstDepRecordHeader::CopyFrom(const InstDepRecordHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecordHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstDepRecordHeader::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  return true;
}

void InstDepRecordHeader::Swap(InstDepRecordHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstDepRecordHeader::InternalSwap(InstDepRecordHeader* other) {
  using std::swap;
  obj_id_.Swap(&other->obj_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(tick_freq_, other->tick_freq_);
  swap(ver_, other->ver_);
  swap(window_size_, other->window_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstDepRecordHeader::GetMetadata() const {
  protobuf_proto_2finst_5fdep_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2finst_5fdep_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InstDepRecord::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstDepRecord::kSeqNumFieldNumber;
const int InstDepRecord::kTypeFieldNumber;
const int InstDepRecord::kPAddrFieldNumber;
const int InstDepRecord::kSizeFieldNumber;
const int InstDepRecord::kFlagsFieldNumber;
const int InstDepRecord::kRobDepFieldNumber;
const int InstDepRecord::kCompDelayFieldNumber;
const int InstDepRecord::kRegDepFieldNumber;
const int InstDepRecord::kWeightFieldNumber;
const int InstDepRecord::kPcFieldNumber;
const int InstDepRecord::kVAddrFieldNumber;
const int InstDepRecord::kAsidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstDepRecord::InstDepRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2finst_5fdep_5frecord_2eproto::scc_info_InstDepRecord.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMessage.InstDepRecord)
}
InstDepRecord::InstDepRecord(const InstDepRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      rob_dep_(from.rob_dep_),
      reg_dep_(from.reg_dep_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_num_, &from.seq_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&asid_) -
    reinterpret_cast<char*>(&seq_num_)) + sizeof(asid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessage.InstDepRecord)
}

void InstDepRecord::SharedCtor() {
  ::memset(&seq_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&asid_) -
      reinterpret_cast<char*>(&seq_num_)) + sizeof(asid_));
}

InstDepRecord::~InstDepRecord() {
  // @@protoc_insertion_point(destructor:ProtoMessage.InstDepRecord)
  SharedDtor();
}

void InstDepRecord::SharedDtor() {
}

void InstDepRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InstDepRecord::descriptor() {
  ::protobuf_proto_2finst_5fdep_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2finst_5fdep_5frecord_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InstDepRecord& InstDepRecord::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2finst_5fdep_5frecord_2eproto::scc_info_InstDepRecord.base);
  return *internal_default_instance();
}


void InstDepRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage.InstDepRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rob_dep_.Clear();
  reg_dep_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&seq_num_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pc_) -
        reinterpret_cast<char*>(&seq_num_)) + sizeof(pc_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&v_addr_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&asid_) -
        reinterpret_cast<char*>(&v_addr_)) + sizeof(asid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InstDepRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMessage.InstDepRecord)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 seq_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_seq_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seq_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ProtoMessage::InstDepRecord_RecordType_IsValid(value)) {
            set_type(static_cast< ::ProtoMessage::InstDepRecord_RecordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 p_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_p_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &p_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 rob_dep = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 48u, input, this->mutable_rob_dep())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rob_dep())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 comp_delay = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_comp_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &comp_delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 reg_dep = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 64u, input, this->mutable_reg_dep())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_reg_dep())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 weight = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_weight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 pc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_pc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 v_addr = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_v_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &v_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asid = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_asid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMessage.InstDepRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMessage.InstDepRecord)
  return false;
#undef DO_
}

void InstDepRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMessage.InstDepRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seq_num = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seq_num(), output);
  }

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional uint64 p_addr = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->p_addr(), output);
  }

  // optional uint32 size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->size(), output);
  }

  // optional uint32 flags = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flags(), output);
  }

  // repeated uint64 rob_dep = 6;
  for (int i = 0, n = this->rob_dep_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      6, this->rob_dep(i), output);
  }

  // required uint64 comp_delay = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->comp_delay(), output);
  }

  // repeated uint64 reg_dep = 8;
  for (int i = 0, n = this->reg_dep_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      8, this->reg_dep(i), output);
  }

  // optional uint32 weight = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->weight(), output);
  }

  // optional uint64 pc = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->pc(), output);
  }

  // optional uint64 v_addr = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->v_addr(), output);
  }

  // optional uint32 asid = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->asid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMessage.InstDepRecord)
}

::google::protobuf::uint8* InstDepRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage.InstDepRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 seq_num = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seq_num(), target);
  }

  // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional uint64 p_addr = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->p_addr(), target);
  }

  // optional uint32 size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->size(), target);
  }

  // optional uint32 flags = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flags(), target);
  }

  // repeated uint64 rob_dep = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(6, this->rob_dep_, target);

  // required uint64 comp_delay = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->comp_delay(), target);
  }

  // repeated uint64 reg_dep = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(8, this->reg_dep_, target);

  // optional uint32 weight = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->weight(), target);
  }

  // optional uint64 pc = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->pc(), target);
  }

  // optional uint64 v_addr = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->v_addr(), target);
  }

  // optional uint32 asid = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->asid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage.InstDepRecord)
  return target;
}

size_t InstDepRecord::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoMessage.InstDepRecord)
  size_t total_size = 0;

  if (has_seq_num()) {
    // required uint64 seq_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_num());
  }

  if (has_type()) {
    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_comp_delay()) {
    // required uint64 comp_delay = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->comp_delay());
  }

  return total_size;
}
size_t InstDepRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessage.InstDepRecord)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000015) ^ 0x00000015) == 0) {  // All required fields are present.
    // required uint64 seq_num = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seq_num());

    // required .ProtoMessage.InstDepRecord.RecordType type = 2 [default = INVALID];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required uint64 comp_delay = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->comp_delay());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint64 rob_dep = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->rob_dep_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->rob_dep_size());
    total_size += data_size;
  }

  // repeated uint64 reg_dep = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->reg_dep_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->reg_dep_size());
    total_size += data_size;
  }

  // optional uint64 p_addr = 3;
  if (has_p_addr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->p_addr());
  }

  // optional uint32 size = 4;
  if (has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  if (_has_bits_[0 / 32] & 224u) {
    // optional uint32 flags = 5;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

    // optional uint32 weight = 9;
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weight());
    }

    // optional uint64 pc = 10;
    if (has_pc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pc());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 v_addr = 11;
    if (has_v_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->v_addr());
    }

    // optional uint32 asid = 12;
    if (has_asid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InstDepRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessage.InstDepRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const InstDepRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstDepRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessage.InstDepRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessage.InstDepRecord)
    MergeFrom(*source);
  }
}

void InstDepRecord::MergeFrom(const InstDepRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage.InstDepRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rob_dep_.MergeFrom(from.rob_dep_);
  reg_dep_.MergeFrom(from.reg_dep_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      seq_num_ = from.seq_num_;
    }
    if (cached_has_bits & 0x00000002u) {
      p_addr_ = from.p_addr_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000010u) {
      comp_delay_ = from.comp_delay_;
    }
    if (cached_has_bits & 0x00000020u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000040u) {
      weight_ = from.weight_;
    }
    if (cached_has_bits & 0x00000080u) {
      pc_ = from.pc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      v_addr_ = from.v_addr_;
    }
    if (cached_has_bits & 0x00000200u) {
      asid_ = from.asid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InstDepRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessage.InstDepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstDepRecord::CopyFrom(const InstDepRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage.InstDepRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InstDepRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000015) != 0x00000015) return false;
  return true;
}

void InstDepRecord::Swap(InstDepRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstDepRecord::InternalSwap(InstDepRecord* other) {
  using std::swap;
  rob_dep_.InternalSwap(&other->rob_dep_);
  reg_dep_.InternalSwap(&other->reg_dep_);
  swap(seq_num_, other->seq_num_);
  swap(p_addr_, other->p_addr_);
  swap(type_, other->type_);
  swap(size_, other->size_);
  swap(comp_delay_, other->comp_delay_);
  swap(flags_, other->flags_);
  swap(weight_, other->weight_);
  swap(pc_, other->pc_);
  swap(v_addr_, other->v_addr_);
  swap(asid_, other->asid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InstDepRecord::GetMetadata() const {
  protobuf_proto_2finst_5fdep_5frecord_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2finst_5fdep_5frecord_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMessage::InstDepRecordHeader* Arena::CreateMaybeMessage< ::ProtoMessage::InstDepRecordHeader >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMessage::InstDepRecordHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMessage::InstDepRecord* Arena::CreateMaybeMessage< ::ProtoMessage::InstDepRecord >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMessage::InstDepRecord >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
